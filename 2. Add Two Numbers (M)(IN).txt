
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode totalSum = new ListNode(-1);
        ListNode cur = totalSum;
        int carry = 0;
        int sum = 0;
        while(l1 != null || l2 != null) {
            if(l1 == null) {
                sum = l2.val + carry;
                l2 = l2.next;
            } else if (l2 == null) {
                sum = l1.val + carry;
                l1 = l1.next;
            } else {
                sum = l1.val + l2.val + carry;
                l1 = l1.next;
                l2 = l2.next;
            }
            carry = 0;
            if(sum >= 10) {
                carry = 1;
                sum = sum - 10;
            }
            cur.next = new ListNode(sum);
            cur = cur.next;
        }
        if(carry != 0) {
            cur.next = new ListNode(carry);
        }
        return totalSum.next;
    }
}
//  2 4 3 6 7   l1
//  7 6 6       l2
//  9 0 0 7 


// 999999 9
//    999 9
// ------1-
//1000999 8

//if two node added is < 10, we just create a new node and the sum of two digit will be the new node's value
//if two node added is >= 10, we create a new node and the value of new node will be sum - 10;
//and since two value is 0-9, the carry can only be 0 or 1. is the carry is one, then we add the carry to the next sum and clear the carry