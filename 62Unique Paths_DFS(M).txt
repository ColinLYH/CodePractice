//Done in 20 mins

//This solution is not fast enough (see DP)

class Solution {
    public int uniquePaths(int m, int n) {

        int[] count = new int[]{0};
        dfs(1, 1, 0, count, m, n);
        return count[0];
    }
    
    private void dfs(int x, int y, int level, int[] count, int m, int n){
        if(level == m + n - 2) {
            count[0]++;
            return;
        }
        if(x + 1 <= n) {
            dfs(x + 1, y, level + 1, count, m, n);
        }
        if(y + 1 <= m) {
            dfs(x, y + 1, level + 1, count, m, n);
        }
    }
}



//             (0,0)
//            /     \
//         (0,1)  (-1,0)
//         

//because robot can only move to right or down, after it moves 8steps, it's guarantted to be at the finish position
//use n as x-coord, m as y-coord

//I flip the board based on the topbar, so the robot is going from (0,0) to (n,m)
//so the robot can only move to right and UP(instead of down) , in this way the coordinate is more intuitive
